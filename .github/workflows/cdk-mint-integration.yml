name: CDK integration

on: [push, pull_request]

jobs:
  integration-tests:
    runs-on: ubuntu-24.04
    steps:
      - name: Pull and start mint
        run: |
          docker run -d -p 3338:3338 \
          --name cdk-mint \
          -e CDK_MINTD_DATABASE=sqlite \
          -e CDK_MINTD_LN_BACKEND=fakewallet \
          -e CDK_MINTD_INPUT_FEE_PPK=100 \
          -e CDK_MINTD_LISTEN_HOST=0.0.0.0 \
          -e CDK_MINTD_LISTEN_PORT=3338 \
          -e CDK_MINTD_MNEMONIC='abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about' \
          cashubtc/mintd:latest-amd64 \
      - name: Check running containers
        run: docker ps

      - name: Check system and glibc versions
        run: |
          echo "=== UBUNTU VERSION ==="
          lsb_release -a || true
          echo
          cat /etc/os-release
          echo

          echo "=== GLIBC VERSION ==="
          ldd --version || true
          echo
          /lib/x86_64-linux-gnu/libc.so.6 2>&1 | head -n1 || true
          echo

          echo "=== AVAILABLE GLIBC VERSIONS ==="
          strings /lib/x86_64-linux-gnu/libc.so.6 | grep GLIBC_ | sort -V | tail -10 || true
          echo

      - name: Check container logs
        run: docker logs cdk-mint

#      - name: Sleep 5 seconds and curl on localhost:3338/v1/info
#        run: |
#          sleep 30
#          curl localhost:3338/v1/info

#     funny idea, maybe mint is starting slower than these 30s - double it
      - name: Wait for mint to be ready
        run: |
          for i in {1..60}; do
            if curl -s http://localhost:3338/v1/info > /dev/null; then
              echo "Mint is up!"
              exit 0
            fi
            echo "Waiting for mint..."
            sleep 2
          done
          echo "Mint did not start in time"
          exit 1

      - name: Check container logs again
        run: docker logs cdk-mint

      - name: Checkout cashu-ts repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - run: npm ci
      - run: npm run compile
      - run: npm run test-integration
